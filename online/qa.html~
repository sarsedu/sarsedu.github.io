
<!DOCTYPE html>
<html>
<script src="lib.js">
</script>
<head>
<style>
body{
margin:0px;
}
</style>
<!-- from this-->
 <!-- to this part only for home page-->
 <title>Sars vedio</title>
<meta content="width=device-width,initial-
scale=1"name=viewport>
<meta content="Get YouTube gameplay and reviews as well as utility and essential apps and games for Android and online."name=description>    </head>
<body id="body" onscroll="myFunction()" onload="loaded()">
 <span style="display:block;width:100%;height:55px;background-color:dodgerblue;padding-top:20px;font-family:arial; color:white;font-size:20px;box-shadow:2px 2px 2px 2px rgba(1,1,1,0.5);position:fixed;">
<a href="home.html"><img src="backbut.png" height="29" style="padding-left:20px;padding-right:20px;"></a> <span id="heading" style="font-size:20px;">watch the em'</span></span>
    <div id="player" style="padding-top:76px;"></div></h2>

<br><script src="https://apis.google.com/js/platform.js"></script>
<div class="g-ytsubscribe" data-channelid="UCeUdXBRLQEetnA90OOpP58w" data-layout="full" data-count="default"></div>
<div id="description" style="font-family:arial;margin-top:-4px;background-color:#5DB579;color:white;padding:100px;"></div>
 <script type="text/javascript">
function myFunction() {
    var elmnt = document.getElementById("body");
    0
    var y = elmnt.scrollTop;
    
if (y > 120) {
document.getElementById("ytp").style.visibility="visible";
document.getElementById("ytp").style.opacity="1";
document.getElementById("ytp").style.paddingTop="10";
}
}</script>
     <script>
      // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      function onYouTubeIframeAPIReady() {
     var intViewportWidth = window.innerWidth;
        player = new YT.Player('player', {
          height: '400',
          width:  '100%',
          videoId: get('id'),
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
      }

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.playVideo();
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      var done = false;
      function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING && !done) {
          setTimeout(stopVideo, 1000);
          done = true;
          location.href="qa.html?add=1";
        }
      }
      function stopVideo() {
        player.stopVideo();
      }
function loaded(){
document.getElementById("description").innerHTML = get('des');
document.getElementById("heading").innerHTML = get('title');
}
    </script>
</body>
</html>

